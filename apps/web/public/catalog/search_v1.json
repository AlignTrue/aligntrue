{
  "version": "1.0.0",
  "generated_at": "2025-10-31T18:37:50.475Z",
  "entries": [
    {
      "id": "packs/base/base-global",
      "name": "Base Global",
      "slug": "base-global",
      "description": "Essential baseline rules for all AI coding agents. Ensures deterministic behavior, clear output formatting, and consistent code quality practices. Start here for any new project.",
      "summary_bullets": [
        "Deterministic output with stable sorting and hashing",
        "Clear error messages with actionable guidance",
        "Consistent code formatting and style",
        "CI gates and contribution workflow",
        "No generated artifacts in version control"
      ],
      "categories": ["foundations", "code-quality"],
      "tags": ["baseline", "essential", "determinism", "ci", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-docs",
      "name": "Base Documentation",
      "slug": "base-docs",
      "description": "Docs-as-code baseline enforcing readme-first development, CI-enforced quality, and behavior-synced documentation updates. Keeps documentation minimal, testable, and always current.",
      "summary_bullets": [
        "README with quickstart required",
        "Behavior changes must update docs",
        "Link checking in CI",
        "Copy-pasteable runnable commands",
        "CHANGELOG maintenance"
      ],
      "categories": ["foundations", "development-workflow"],
      "tags": ["documentation", "readme", "changelog", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-typescript",
      "name": "TypeScript Standards",
      "slug": "base-typescript",
      "description": "TypeScript development standards for correctness, safety, and maintainability. Enforces strict compiler settings, no 'any' types, type-only imports, and input validation at boundaries.",
      "summary_bullets": [
        "Strict tsconfig with noUncheckedIndexedAccess",
        "No explicit 'any' types allowed",
        "Type-only imports for tree-shaking",
        "Named exports for consistency",
        "Input validation at all boundaries"
      ],
      "categories": ["code-quality"],
      "tags": ["typescript", "language", "type-safety", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-testing",
      "name": "Testing Baseline",
      "slug": "base-testing",
      "description": "Testing baseline ensuring fast, deterministic, useful tests with clear strategy. Emphasizes test pyramid balance, no sleep-based timing, and speed requirements under 1 second per test.",
      "summary_bullets": [
        "Test pyramid balance (more unit, less e2e)",
        "No sleeps or timing-based tests",
        "Fast tests (sub-second target)",
        "Deterministic with frozen time and seeded randomness",
        "Coverage thresholds in CI"
      ],
      "categories": ["code-quality", "development-workflow"],
      "tags": ["testing", "quality", "determinism", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-tdd",
      "name": "TDD Workflow",
      "slug": "base-tdd",
      "description": "Test-Driven Development workflow implementing red-green-refactor cycle. Enforces writing tests before implementation, minimal changes to pass, and deterministic test execution.",
      "summary_bullets": [
        "Red-green-refactor cycle enforcement",
        "Write failing test first",
        "Minimal implementation to pass tests",
        "Deterministic tests required",
        "Small focused commits"
      ],
      "categories": ["development-workflow", "code-quality"],
      "tags": ["tdd", "testing", "workflow", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-debugging",
      "name": "Debugging Workflow",
      "slug": "base-debugging",
      "description": "Systematic debugging workflow ensuring reproduce-before-fix discipline. Covers reproduce, reduce, root-cause, fix, and prevent cycles with regression test requirements.",
      "summary_bullets": [
        "Reproduce deterministically before fixing",
        "Regression test required before fix",
        "No debug artifacts in version control",
        "Systematic root-cause analysis",
        "Minimal fix validation"
      ],
      "categories": ["development-workflow"],
      "tags": ["debugging", "troubleshooting", "determinism", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-security",
      "name": "Security and Compliance",
      "slug": "base-security",
      "description": "Security and compliance baseline covering secrets management, supply chain security, and dependency auditing. Prevents secret commits, enforces lockfiles, and blocks vulnerable dependencies.",
      "summary_bullets": [
        "No committed secrets (gitleaks scanning)",
        "Lockfile and pinned versions required",
        "Dependency audit in CI",
        "No floating version ranges",
        "Environment example files"
      ],
      "categories": ["security", "code-quality"],
      "tags": [
        "security",
        "compliance",
        "secrets",
        "supply-chain",
        "paved-road"
      ],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/base/base-rule-authoring",
      "name": "Rule Authoring Guide",
      "slug": "base-rule-authoring",
      "description": "Meta-guide for authoring AlignTrue rules with clear scope, actionable directives, and explicit precedence. Ensures rules are focused, well-scoped, and maintainable.",
      "summary_bullets": [
        "One topic per rule file",
        "Explicit scope and exclusions",
        "Precedence declarations",
        "Machine-checkable rules",
        "Actionable guidance"
      ],
      "categories": ["development-workflow", "foundations"],
      "tags": ["meta", "rule-authoring", "governance", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf",
        "aider"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/stacks/nextjs-app-router",
      "name": "Next.js App Router",
      "slug": "nextjs-app-router",
      "description": "Best practices for Next.js App Router covering server/client boundaries, caching strategies, and data fetching patterns. Enforces Server Components by default and proper input validation.",
      "summary_bullets": [
        "Server Components by default",
        "Explicit caching and revalidation",
        "Server Action input validation",
        "Named exports in shared code",
        "Colocated route files"
      ],
      "categories": ["frameworks"],
      "tags": ["nextjs", "react", "app-router", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/stacks/vercel-deployments",
      "name": "Vercel Deployments",
      "slug": "vercel-deployments",
      "description": "Vercel deployment best practices covering environment tiers, runtime selection, and preview hygiene. Prevents secret leaks and ensures proper environment variable usage.",
      "summary_bullets": [
        "No client-side secrets (NEXT_PUBLIC_ prefix)",
        "No committed .env files",
        "Edge vs Node runtime guidance",
        "Preview URL requirements",
        "Environment tier separation"
      ],
      "categories": ["infrastructure"],
      "tags": ["vercel", "deployment", "infra", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    },
    {
      "id": "packs/stacks/web-quality",
      "name": "Web Quality Standards",
      "slug": "web-quality",
      "description": "Core Web Vitals targets, performance budgets, and accessibility standards. Enforces LCP under 2.5s, next/image usage, next/font optimization, and WCAG 2.0 AA compliance.",
      "summary_bullets": [
        "Core Web Vitals SLOs (LCP ≤ 2.5s)",
        "Use next/image for all images",
        "Use next/font for font loading",
        "ESLint a11y plugin required",
        "Playwright accessibility tests"
      ],
      "categories": ["performance", "code-quality"],
      "tags": ["web", "performance", "a11y", "quality", "paved-road"],
      "compatible_tools": [
        "cursor",
        "claude-code",
        "github-copilot",
        "cody",
        "continue",
        "windsurf"
      ],
      "license": "CC0-1.0",
      "last_updated": "2025-10-31",
      "has_plugs": false,
      "overlay_friendly": true,
      "stats": {
        "copies_7d": 0
      }
    }
  ]
}
