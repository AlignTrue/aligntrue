/**
 * AGENTS.md starter template
 * Provides example rules in universal markdown format
 */

export function generateAgentsMdStarter(): string {
  return `# AGENTS.md

**Version:** v1
**Generated by:** AlignTrue

This file contains rules and guidance for AI coding agents.

## Rule: typescript-strict

**ID:** typescript-strict
**Severity:** ERROR
**Scope:** tsconfig.json

Enable strict mode in tsconfig.json.
This enforces noImplicitAny, strictNullChecks, and strictFunctionTypes.
Fix all TypeScript errors before committing.
---

## Rule: naming-conventions

**ID:** naming-conventions
**Severity:** ERROR
**Scope:** **/*.ts, **/*.tsx

Follow these naming conventions:
- Classes: PascalCase (e.g., \`UserRepository\`)
- Functions/variables: camelCase (e.g., \`fetchUserData\`)
- Constants: UPPER_SNAKE_CASE (e.g., \`MAX_RETRIES\`)
- Private properties: prefix with underscore (e.g., \`_cache\`)
---

## Rule: testing-required

**ID:** testing-required
**Severity:** WARN
**Scope:** src/**/*.ts, src/**/*.tsx

Write unit tests for all new functions.
Test file naming: \`*.test.ts\` or \`*.spec.ts\`
Aim for >80% code coverage.

Examples:
- src/utils/parser.ts â†’ src/utils/parser.test.ts
- src/components/Button.tsx â†’ src/components/Button.test.tsx
---

## Rule: imports-organized

**ID:** imports-organized
**Severity:** INFO
**Scope:** **/*.ts, **/*.tsx

Sort imports alphabetically.
Group imports: node modules first, then local modules.
Remove unused imports before committing.

Example:
\`\`\`typescript
// Node modules
import { readFile } from 'fs/promises'
import { join } from 'path'

// Local modules
import { parseConfig } from './config'
import { logger } from './logger'
\`\`\`
---

## Rule: no-console-log

**ID:** no-console-log
**Severity:** WARN
**Scope:** src/**/*.ts, src/**/*.tsx

Don't use \`console.log()\` in production code.
Use a proper logging library instead.

For debugging during development, use:
- \`console.debug()\` for verbose logs
- \`console.info()\` for informational messages
- \`console.warn()\` for warnings
- \`console.error()\` for errors
---

**Generated by AlignTrue**

ðŸ’¡ **Tip:** Edit these rules to match your project's needs, then run \`aligntrue sync\` to update other agents.
`;
}

/**
 * Get the default path for AGENTS.md starter template
 */
export function getAgentsMdStarterPath(): string {
  return "AGENTS.md";
}
